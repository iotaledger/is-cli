"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Base = void 0;
const crypto = require("crypto");
const ed = __importStar(require("noble-ed25519"));
const bs58 = __importStar(require("bs58"));
const enums_1 = require("../models/enums");
const axios = require('axios').default;
class Base {
    constructor({ apiKey, baseUrl, apiVersion }) {
        this.baseUrl = "http://ensuresec.solutions.iota.org/";
        this.apiKey = apiKey || "";
        this.baseUrl = baseUrl || "http://ensuresec.solutions.iota.org/";
        this.apiVersion = apiVersion || enums_1.ApiVersion.v01;
    }
    authenticate(identity) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            const body = yield this.get(`authentication/prove-ownership/${(_a = identity === null || identity === void 0 ? void 0 : identity.doc) === null || _a === void 0 ? void 0 : _a.id}`);
            const nonce = body === null || body === void 0 ? void 0 : body.nonce;
            const encodedKey = yield this.getHexEncodedKey((_b = identity === null || identity === void 0 ? void 0 : identity.key) === null || _b === void 0 ? void 0 : _b.secret);
            const signedNonce = yield this.signNonce(encodedKey, nonce);
            const { jwt } = yield this.post(`authentication/prove-ownership/${identity.doc.id}`, {
                signedNonce
            });
            Base.jwtToken = jwt;
        });
    }
    ;
    signNonce(privateKey, nonce) {
        return __awaiter(this, void 0, void 0, function* () {
            if ((nonce === null || nonce === void 0 ? void 0 : nonce.length) !== 40) {
                throw new Error('nonce must have a length of 40 characters!');
            }
            const hash = yield this.hashNonce(nonce);
            return yield ed.sign(hash, privateKey);
        });
    }
    ;
    hashNonce(nonce) {
        return __awaiter(this, void 0, void 0, function* () {
            const encoder = new TextEncoder();
            const data = encoder.encode(nonce);
            return crypto.createHash("sha256").update(data).digest("hex");
        });
    }
    getHexEncodedKey(base58Key) {
        return bs58.decode(base58Key).toString('hex');
    }
    post(url, data, jwtToken) {
        return __awaiter(this, void 0, void 0, function* () {
            let response = yield axios.request({
                method: "post",
                url: `${this.baseUrl}/api/${this.apiVersion}/${url}`,
                params: {
                    "api-key": this.apiKey
                },
                data,
                headers: jwtToken ? { 'Authorization': `Bearer ${jwtToken}` } : {}
            });
            return response === null || response === void 0 ? void 0 : response.data;
        });
    }
    get(url, params = {}, jwtToken) {
        return __awaiter(this, void 0, void 0, function* () {
            params['api-key'] = this.apiKey;
            let response = yield axios.request({
                method: "get",
                url: `${this.baseUrl}/api/${this.apiVersion}/${url}`,
                params,
                headers: jwtToken ? { 'Authorization': `Bearer ${jwtToken}` } : {}
            });
            return response === null || response === void 0 ? void 0 : response.data;
        });
    }
    delete(url, params = {}, jwtToken) {
        return __awaiter(this, void 0, void 0, function* () {
            params['api-key'] = this.apiKey;
            let response = yield axios.request({
                method: "delete",
                url: `${this.baseUrl}/api/${this.apiVersion}/${url}`,
                params,
                headers: jwtToken ? { 'Authorization': `Bearer ${jwtToken}` } : {}
            });
            return response === null || response === void 0 ? void 0 : response.data;
        });
    }
    put(url, data, jwtToken) {
        return __awaiter(this, void 0, void 0, function* () {
            let response = yield axios.request({
                method: "put",
                url: `${this.baseUrl}/api/${this.apiVersion}/${url}`,
                params: {
                    "api-key": this.apiKey
                },
                data,
                headers: jwtToken ? { 'Authorization': `Bearer ${jwtToken}` } : {}
            });
            return response === null || response === void 0 ? void 0 : response.data;
        });
    }
}
exports.Base = Base;
//# sourceMappingURL=base.js.map